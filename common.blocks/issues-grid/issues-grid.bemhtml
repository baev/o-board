block('issues-grid').js()({
    issues: this.ctx.issues
});

block('issues-grid').content()(function() {
    return [{
        elem: 'header',
        content: {
            elem: 'row',
            content: [{
                elem: 'cell',
                elemMods: { header: true },
                content: 'PR'
            }, {
                elem: 'cell',
                attrs: { 'data-key': 'issue' },
                elemMods: { header: true, sorter: true },
                content: 'Issue'
            }, {
                elem: 'cell',
                attrs: { 'data-key': 'title' },
                elemMods: { header: true, sorter: true },
                content: 'Title'
            }, {
                elem: 'cell',
                elemMods: { header: true },
                content: 'Labels'
            }, {
                elem: 'cell',
                attrs: { 'data-key': 'comment' },
                elemMods: { header: true, sorter: true },
                content: 'Last comment'
            }]
        }
    }, {
        elem: 'body',
        content: this.ctx.issues.map(function(issue) {
            return {
                elem: 'issue-row',
                issue: issue
            };
        })
    }];
});

block('issues-grid').elem('cell').elemMod('header', true).elemMod('sorter', true).content()(function() {
    return [{
        elem: 'title',
        tag: 'span',
        content: this.ctx.content
    }, {
        elem: 'sorter',
        tag: 'span',
        content: {
            block: 'fa',
            icon: 'angle-down'
        }
    }]
});

block('issues-grid').elem('issue-row').content()(function() {
    console.log('this.ctx.issue', this.ctx.issue);

    return [{
        elem: 'pr-cell',
        mix: { elem: 'cell' },
        isPullRequest: this.ctx.issue.isPullRequest
    }, {
        elem: 'issue-cell',
        mix: { elem: 'cell' },
        url: this.ctx.issue.url,
        organization: this.ctx.issue.organization,
        repository: this.ctx.issue.repository,
        id: this.ctx.issue.id
    }, {
        elem: 'title-cell',
        mix: { elem: 'cell' },
        title: this.ctx.issue.title
    }, {
        elem: 'labels-cell',
        mix: { elem: 'cell' },
        labels: this.ctx.issue.labels
    }, {
        elem: 'comment-cell',
        mix: { elem: 'cell' },
        comment: this.ctx.issue.comment
    }];
});

block('issues-grid').elem('pr-cell')(
    match(function() {
        return this.ctx.isPullRequest;
    }).content()(function() {
        return {
            block: 'fa',
            icon: 'code-fork'
        }
    })
);

block('issues-grid').elem('issue-cell').content()(function() {
    return {
        block: 'link',
        mods: { theme: 'islands', size: 's' },
        url: this.ctx.url,
        target: '_blank',
        content: this.ctx.organization + '/' + this.ctx.repository + '#' + this.ctx.id
    };
});

block('issues-grid').elem('title-cell').content()(function() {
    return this.ctx.title;
});

block('issues-grid').elem('comment-cell')
    .match(function () { return this.ctx.comment; }).content()(function() {
        return [{
            block: 'link',
            mods: { theme: 'islands' },
            url: this.ctx.comment.author.url,
            target: '_blank',
            content: '@' + this.ctx.comment.author.login
        }, ' ', {
            tag: 'span',
            title: moment(this.ctx.comment.date).format(),
            content: moment(this.ctx.comment.date).fromNow()
        }];
    });

block('issues-grid').elem('title-cell').content()(function() {
    return this.ctx.title;
});

block('issues-grid').elem('labels-cell').content()(function() {
    return this.ctx.labels.map(function(label) {
        return {
            elem: 'label',
            label: label
        }
    })
});

block('issues-grid').elem('label').content()(function() {
    return this.ctx.label.name;
});

block('issues-grid').elem('comment-cell').match(function () { return this.ctx.comment; }).content()(function() {
    return [{
        block: 'link',
        mods: { theme: 'islands', size: 's' },
        url: this.ctx.comment.author.url,
        content: this.xmlEscape('<' + this.ctx.comment.author.name + '>')
    }, ' ', this.moment(this.ctx.comment.date).fromNow()]
});

block('issues-grid').elem('label')(
    tag()('span'),
    attrs()(function() {
        return { style: 'border-color: ' + this.ctx.label.color + ';' }
    }),
    content()(function() {
        return this.ctx.label.name;
    })
);
