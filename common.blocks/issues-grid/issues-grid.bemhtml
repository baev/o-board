block('issues-grid').js()(function() {
    return {
        issues: this.ctx.issues
    }
});

block('issues-grid').content()(function() {
    return [{
        elem: 'header',
        content: {
            elem: 'row',
            content: [{
                elem: 'cell',
                elemMods: {header: true},
                content: 'PR'
            }, {
                elem: 'cell',
                elemMods: {header: true, sorter: true},
                key: 'issue',
                content: 'Issue'
            }, {
                elem: 'cell',
                key: 'title',
                elemMods: {header: true, sorter: true},
                content: 'Title'
            }, {
                elem: 'cell',
                elemMods: {header: true},
                content: 'Labels'
            }, {
                elem: 'cell',
                key: 'activity',
                elemMods: {header: true, sorter: true},
                content: 'Last activity'
            }]
        }
    }, {
        elem: 'body',
        content: this.ctx.issues.map(function(issue) {
            return {
                elem: 'issue-row',
                issue: issue
            };
        })
    }, {
        block: 'perdula'
    }];
});

block('issues-grid').elem('cell').elemMod('header', true).elemMod('sorter', true).content()(function() {
    return [{
        elem: 'title',
        tag: 'span',
        content: this.ctx.content
    }, {
        elem: 'sorter',
        tag: 'span',
        attrs: {'data-key': this.ctx.key},
        content: {
            block: 'fa',
            icon: 'angle-down'
        }
    }]
});

block('issues-grid').elem('issue-row')(
    attrs()(function() {
        return {'data-issue': this.ctx.issue.id}
    }),
    content()(function() {
        return [{
            elem: 'pr-cell',
            mix: {elem: 'cell'},
            isPullRequest: this.ctx.issue.isPullRequest
        }, {
            elem: 'issue-cell',
            mix: {elem: 'cell'},
            url: this.ctx.issue.url,
            organization: this.ctx.issue.organization,
            repository: this.ctx.issue.repository,
            id: this.ctx.issue.id
        }, {
            elem: 'title-cell',
            mix: {elem: 'cell'},
            title: this.ctx.issue.title
        }, {
            elem: 'labels-cell',
            mix: {elem: 'cell'},
            labels: this.ctx.issue.labels
        }, {
            elem: 'comment-cell',
            mix: {elem: 'cell'},
            lastActivity: this.ctx.issue.lastActivity
        }];
    }));

block('issues-grid').elem('pr-cell')(
    match(function() {
        return this.ctx.isPullRequest;
    }).content()(function() {
        return {
            block: 'fa',
            icon: 'code-fork'
        }
    })
);

block('issues-grid').elem('issue-cell').content()(function() {
    return {
        block: 'link',
        mods: {theme: 'islands', size: 's'},
        url: this.ctx.url,
        target: '_blank',
        content: this.ctx.organization + '/' + this.ctx.repository + '#' + this.ctx.id
    };
});

block('issues-grid').elem('title-cell').content()(function() {
    return this.ctx.title;
});

block('issues-grid').elem('labels-cell').content()(function() {
    return this.ctx.labels.map(function(label) {
        return [{
            elem: 'label',
            label: label
        }, ' ']
    })
});

block('issues-grid').elem('comment-cell').match(function() {
    return this.ctx.lastActivity;
}).content()(function() {
    return [{
        block: 'issues-grid',
        elem: 'user',
        avatar: this.ctx.lastActivity.author.avatarUrl,
        login: '@' + this.ctx.lastActivity.author.login,
        url: this.ctx.lastActivity.author.url
    }, {
        block: 'issues-grid',
        elem: 'type',
        type: this.ctx.lastActivity.type
    }, {
        block: 'link',
        mods: {theme: 'islands', size: 's'},
        url: this.ctx.lastActivity.issueUrl,
        content: {
            elem: 'date',
            tag: 'span',
            content: [{
                tag: 'span',
                title: moment(this.ctx.lastActivity.date).format(),
                content: moment(this.ctx.lastActivity.date).fromNow()
            }]
        }
    }]
});

block('issues-grid').elem('label')(
    tag()('span'),
    attrs()(function() {
        return {style: 'background-color: #' + this.ctx.label.color + ';'}
    }),
    content()(function() {
        return this.ctx.label.name;
    })
);

block('issues-grid').elem('user')(
    tag()('span'),
    content()(function() {
        return [{
            block: 'image',
            url: this.ctx.avatar,
            width: 24,
            height: 24
        }, {
            block: this.ctx.url ? 'link' : 'text',
            tag: this.ctx.url ? 'a' : 'span',
            mods: {theme: 'islands', size: 's'},
            mix: {block: 'issues-grid', elem: 'login'},
            url: this.ctx.url,
            content: this.ctx.login
        }];
    })
);

block('issues-grid').elem('type')(
    tag()('span'),
    content()(function() {
        var message = '';
        switch (this.ctx.type) {
            case 'comment':
                message = 'commented';
                break;
            case 'create':
                message = 'create issue';
                break;
            case 'commit':
                message = 'push commit';
                break;
            case 'pull':
                message = 'make pull request';
                break;
        }
        return message ? ' ' + message + ' ' : '';
    })
);
